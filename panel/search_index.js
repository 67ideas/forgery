var search_data = {"index":{"searchIndex":["addressforgery","array","basicforgery","dictionaries","filereader","forgery","formats","hash","internetforgery","loremipsumforgery","monetaryforgery","nameforgery","object","personalforgery","range","string","forgery()","[]()","[]()","abbreviated_gender()","boolean()","camelize()","character()","characters()","city()","color()","company_name()","constantize()","constantize()","country()","dictionaries()","domain_name()","email_address()","encrypt()","external_path_to_dictionary()","external_path_to_format()","female_first_name()","first_name()","formats()","formatted_money()","frequency()","full_name()","gender()","hex_color()","internal_path_to_dictionary()","internal_path_to_format()","language()","last_name()","loaded?()","loaded?()","lorem_ipsum_characters()","lorem_ipsum_words()","male_first_name()","money()","new()","new()","number()","paragraph()","paragraphs()","password()","path_to_dictionary()","path_to_format()","phone()","province()","province_abbrev()","race()","random()","random()","random_subset()","range_from_quantity()","read_dictionary()","read_file()","read_format()","reset!()","reset!()","reverse_merge()","reverse_merge!()","sentence()","sentences()","shirt_size()","short_hex_color()","state()","state_abbrev()","street_address()","street_name()","street_number()","street_suffix()","suffix()","text()","text()","title()","to_numbers()","top_level_domain()","underscore()","user_name()","word()","words()","zip()","license","readme.markdown","dictionaries.rb","cities","colors","company_names","countries","female_first_names","frequencies","genders","languages","last_names","lorem_ipsum","male_first_names","name_titles","provinces","races","states","street_suffixes","streets","top_level_domains","array.rb","hash.rb","range.rb","string.rb","file_reader.rb","address_forgery.rb","basic_forgery.rb","internet_forgery.rb","lorem_ipsum_forgery.rb","monetary_forgery.rb","name_forgery.rb","personal_forgery.rb","forgery.rb","formats.rb","phone","street_number","zip"],"longSearchIndex":["lib/forgeries/address_forgery.rb","lib/extensions/array.rb","lib/forgeries/basic_forgery.rb","lib/dictionaries.rb","lib/file_reader.rb","lib/forgery.rb","lib/formats.rb","lib/extensions/hash.rb","lib/forgeries/internet_forgery.rb","lib/forgeries/lorem_ipsum_forgery.rb","lib/forgeries/monetary_forgery.rb","lib/forgeries/name_forgery.rb","lib/forgery.rb","lib/forgeries/personal_forgery.rb","lib/extensions/range.rb","lib/extensions/string.rb","object","dictionaries","formats","personalforgery","basicforgery","string","loremipsumforgery","loremipsumforgery","addressforgery","basicforgery","nameforgery","string","string","addressforgery","forgery","internetforgery","internetforgery","basicforgery","filereader","filereader","nameforgery","nameforgery","forgery","monetaryforgery","basicforgery","nameforgery","personalforgery","basicforgery","filereader","filereader","personalforgery","nameforgery","dictionaries","formats","loremipsumforgery","loremipsumforgery","nameforgery","monetaryforgery","dictionaries","formats","basicforgery","loremipsumforgery","loremipsumforgery","basicforgery","filereader","filereader","addressforgery","addressforgery","addressforgery","personalforgery","array","range","array","loremipsumforgery","filereader","filereader","filereader","dictionaries","formats","hash","hash","loremipsumforgery","loremipsumforgery","personalforgery","basicforgery","addressforgery","addressforgery","addressforgery","addressforgery","addressforgery","addressforgery","nameforgery","basicforgery","loremipsumforgery","nameforgery","string","internetforgery","string","internetforgery","loremipsumforgery","loremipsumforgery","addressforgery","files/license.html","files/readme_markdown.html","files/lib/dictionaries_rb.html","files/lib/dictionaries/cities.html","files/lib/dictionaries/colors.html","files/lib/dictionaries/company_names.html","files/lib/dictionaries/countries.html","files/lib/dictionaries/female_first_names.html","files/lib/dictionaries/frequencies.html","files/lib/dictionaries/genders.html","files/lib/dictionaries/languages.html","files/lib/dictionaries/last_names.html","files/lib/dictionaries/lorem_ipsum.html","files/lib/dictionaries/male_first_names.html","files/lib/dictionaries/name_titles.html","files/lib/dictionaries/provinces.html","files/lib/dictionaries/races.html","files/lib/dictionaries/states.html","files/lib/dictionaries/street_suffixes.html","files/lib/dictionaries/streets.html","files/lib/dictionaries/top_level_domains.html","files/lib/extensions/array_rb.html","files/lib/extensions/hash_rb.html","files/lib/extensions/range_rb.html","files/lib/extensions/string_rb.html","files/lib/file_reader_rb.html","files/lib/forgeries/address_forgery_rb.html","files/lib/forgeries/basic_forgery_rb.html","files/lib/forgeries/internet_forgery_rb.html","files/lib/forgeries/lorem_ipsum_forgery_rb.html","files/lib/forgeries/monetary_forgery_rb.html","files/lib/forgeries/name_forgery_rb.html","files/lib/forgeries/personal_forgery_rb.html","files/lib/forgery_rb.html","files/lib/formats_rb.html","files/lib/formats/phone.html","files/lib/formats/street_number.html","files/lib/formats/zip.html"],"info":[["AddressForgery","lib/forgeries/address_forgery.rb","classes/AddressForgery.html"," < Forgery","Generates random address information. ",1],["Array","lib/extensions/array.rb","classes/Array.html"," < Object","",1],["BasicForgery","lib/forgeries/basic_forgery.rb","classes/BasicForgery.html"," < Forgery","",1],["Dictionaries","lib/dictionaries.rb","classes/Dictionaries.html"," < Object","",1],["FileReader","lib/file_reader.rb","classes/FileReader.html"," < Object","",1],["Forgery","lib/forgery.rb","classes/Forgery.html"," < Object","",1],["Formats","lib/formats.rb","classes/Formats.html"," < Object","",1],["Hash","lib/extensions/hash.rb","classes/Hash.html"," < Object","",1],["InternetForgery","lib/forgeries/internet_forgery.rb","classes/InternetForgery.html"," < Forgery","",1],["LoremIpsumForgery","lib/forgeries/lorem_ipsum_forgery.rb","classes/LoremIpsumForgery.html"," < Forgery","",1],["MonetaryForgery","lib/forgeries/monetary_forgery.rb","classes/MonetaryForgery.html"," < Forgery","",1],["NameForgery","lib/forgeries/name_forgery.rb","classes/NameForgery.html"," < Forgery","",1],["Object","lib/forgery.rb","classes/Object.html"," < Object","",1],["PersonalForgery","lib/forgeries/personal_forgery.rb","classes/PersonalForgery.html"," < Forgery","",1],["Range","lib/extensions/range.rb","classes/Range.html"," < Object","",1],["String","lib/extensions/string.rb","classes/String.html"," < Object","",1],["Forgery","Object","classes/Object.html#M000077","(forgery, method=nil, *args)","Alternate Forgery api, see spec/forgery_spec.rb for examples. ",2],["[]","Dictionaries","classes/Dictionaries.html#M000001","(key)","",2],["[]","Formats","classes/Formats.html#M000079","(key)","",2],["abbreviated_gender","PersonalForgery","classes/PersonalForgery.html#M000071","()","",2],["boolean","BasicForgery","classes/BasicForgery.html#M000034","()","",2],["camelize","String","classes/String.html#M000013","(first_letter = :upper)","",2],["character","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000049","(options={})","",2],["characters","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000050","(quantity=10, options={})","",2],["city","AddressForgery","classes/AddressForgery.html#M000028","()","Gets a random city out of the 'cities' dictionary. AddressForgery.city # => \"Anaheim\" AddressForgery.city",2],["color","BasicForgery","classes/BasicForgery.html#M000035","()","",2],["company_name","NameForgery","classes/NameForgery.html#M000067","()","",2],["constantize","String","classes/String.html#M000017","()","",2],["constantize","String","classes/String.html#M000020","()","",2],["country","AddressForgery","classes/AddressForgery.html#M000041","()","Gets a random country out of the 'countries' dictionary. AddressForgery.country # => \"Uruguay\" AddressForgery.country",2],["dictionaries","Forgery","classes/Forgery.html#M000075","()","",2],["domain_name","InternetForgery","classes/InternetForgery.html#M000046","()","",2],["email_address","InternetForgery","classes/InternetForgery.html#M000047","()","",2],["encrypt","BasicForgery","classes/BasicForgery.html#M000031","(password=\"password\", salt=Time.now.to_s)","",2],["external_path_to_dictionary","FileReader","classes/FileReader.html#M000021","(dictionary)","",2],["external_path_to_format","FileReader","classes/FileReader.html#M000016","(format)","",2],["female_first_name","NameForgery","classes/NameForgery.html#M000066","()","",2],["first_name","NameForgery","classes/NameForgery.html#M000063","()","",2],["formats","Forgery","classes/Forgery.html#M000076","()","",2],["formatted_money","MonetaryForgery","classes/MonetaryForgery.html#M000057","(options={})","",2],["frequency","BasicForgery","classes/BasicForgery.html#M000043","()","",2],["full_name","NameForgery","classes/NameForgery.html#M000064","()","",2],["gender","PersonalForgery","classes/PersonalForgery.html#M000070","()","",2],["hex_color","BasicForgery","classes/BasicForgery.html#M000036","()","",2],["internal_path_to_dictionary","FileReader","classes/FileReader.html#M000022","(dictionary)","",2],["internal_path_to_format","FileReader","classes/FileReader.html#M000018","(format)","",2],["language","PersonalForgery","classes/PersonalForgery.html#M000074","()","",2],["last_name","NameForgery","classes/NameForgery.html#M000062","()","",2],["loaded?","Dictionaries","classes/Dictionaries.html#M000002","(key)","",2],["loaded?","Formats","classes/Formats.html#M000080","(key)","",2],["lorem_ipsum_characters","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000061","()","",2],["lorem_ipsum_words","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000060","()","",2],["male_first_name","NameForgery","classes/NameForgery.html#M000065","()","",2],["money","MonetaryForgery","classes/MonetaryForgery.html#M000058","(options={})","",2],["new","Dictionaries","classes/Dictionaries.html#M000000","()","",2],["new","Formats","classes/Formats.html#M000078","()","",2],["number","BasicForgery","classes/BasicForgery.html#M000038","(options={})","",2],["paragraph","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000055","(options={})","",2],["paragraphs","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000056","(quantity=2, options={})","",2],["password","BasicForgery","classes/BasicForgery.html#M000027","(options={})","",2],["path_to_dictionary","FileReader","classes/FileReader.html#M000019","(dictionary)","",2],["path_to_format","FileReader","classes/FileReader.html#M000015","(format)","",2],["phone","AddressForgery","classes/AddressForgery.html#M000040","()","Gets one of the formats from 'phone_formats' and converts it to numbers. AddressForgery.phone # => \"1-(416)185-8799\"",2],["province","AddressForgery","classes/AddressForgery.html#M000032","()","Gets a random Canadian province or territory out of the 'provinces' dictionary. AddressForgery.province",2],["province_abbrev","AddressForgery","classes/AddressForgery.html#M000033","()","Gets a random Canadian province or territory abbreviation out of the 'province_abbrev' dictionary. AddressForgery.province_abbrev",2],["race","PersonalForgery","classes/PersonalForgery.html#M000073","()","",2],["random","Array","classes/Array.html#M000004","()","",2],["random","Range","classes/Range.html#M000008","()","",2],["random_subset","Array","classes/Array.html#M000005","(len=2)","",2],["range_from_quantity","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000059","(quantity, options={})","",2],["read_dictionary","FileReader","classes/FileReader.html#M000010","(dictionary)","",2],["read_file","FileReader","classes/FileReader.html#M000012","(file)","",2],["read_format","FileReader","classes/FileReader.html#M000011","(format)","",2],["reset!","Dictionaries","classes/Dictionaries.html#M000003","()","",2],["reset!","Formats","classes/Formats.html#M000081","()","",2],["reverse_merge","Hash","classes/Hash.html#M000006","(other_hash)","Performs the opposite of merge, with the keys and values from the first hash taking precedence over the",2],["reverse_merge!","Hash","classes/Hash.html#M000007","(other_hash)","Performs the opposite of merge, with the keys and values from the first hash taking precedence over the",2],["sentence","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000053","(options={})","",2],["sentences","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000054","(quantity=2, options={})","",2],["shirt_size","PersonalForgery","classes/PersonalForgery.html#M000072","()","",2],["short_hex_color","BasicForgery","classes/BasicForgery.html#M000037","()","",2],["state","AddressForgery","classes/AddressForgery.html#M000029","()","Gets a random state out of the 'states' dictionary. AddressForgery.state # => \"Mississippi\" AddressForgery.state",2],["state_abbrev","AddressForgery","classes/AddressForgery.html#M000030","()","Gets a random state abbreviation out of the 'state_abbrev' dictionary. AddressForgery.state_abbrev #",2],["street_address","AddressForgery","classes/AddressForgery.html#M000026","()","Gets a full street address, including street number, street name, and street suffix. AddressForgery.street_address",2],["street_name","AddressForgery","classes/AddressForgery.html#M000023","()","Gets a random street name out of the 'streets' dictionary. AddressForgery.street_name # => \"Atwood\" AddressForgery.street_name",2],["street_number","AddressForgery","classes/AddressForgery.html#M000024","()","Gets one of the formats from 'street_number_formats' and converts it to numbers. AddressForgery.street_number",2],["street_suffix","AddressForgery","classes/AddressForgery.html#M000025","()","Gets a random street suffix out of the 'street_suffixes' dictionary. AddressForgery.street_suffix # =>",2],["suffix","NameForgery","classes/NameForgery.html#M000069","()","",2],["text","BasicForgery","classes/BasicForgery.html#M000042","(options={})","",2],["text","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000048","(what=:sentence, quantity=2, options={})","",2],["title","NameForgery","classes/NameForgery.html#M000068","()","",2],["to_numbers","String","classes/String.html#M000009","(replace='#')","",2],["top_level_domain","InternetForgery","classes/InternetForgery.html#M000045","()","",2],["underscore","String","classes/String.html#M000014","()","",2],["user_name","InternetForgery","classes/InternetForgery.html#M000044","()","",2],["word","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000051","(options={})","",2],["words","LoremIpsumForgery","classes/LoremIpsumForgery.html#M000052","(quantity=10, options={})","",2],["zip","AddressForgery","classes/AddressForgery.html#M000039","()","Gets one of the formats from 'zip_formats' and converts it to numbers. AddressForgery.zip # => \"52474\"",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","Copyright (c) 2007 Sevenwire LLC  Permission is hereby granted, free of charge, to any person obtaining",3],["README.markdown","files/README_markdown.html","files/README_markdown.html","","Forgery =======  The Problem: Making meaningful development data for your application.  The Solution:",3],["dictionaries.rb","files/lib/dictionaries_rb.html","files/lib/dictionaries_rb.html","","",3],["cities","files/lib/dictionaries/cities.html","files/lib/dictionaries/cities.html","","Adelanto Agoura Hills Alameda Albany Alhambra Aliso Viejo Alturas Amador City American Canyon Anaheim",3],["colors","files/lib/dictionaries/colors.html","files/lib/dictionaries/colors.html","","Red Blue Green Yellow Orange Purple Violet Indigo Teal Pink Fuscia Goldenrod Mauv Aquamarine Turquoise",3],["company_names","files/lib/dictionaries/company_names.html","files/lib/dictionaries/company_names.html","","Kwilith Eayo Voolith Eabox Gigabox Meeveo Yombu Eire Oyonder Dynazzy Demimbu Wikizz InnoZ Pixonyx Snaptags",3],["countries","files/lib/dictionaries/countries.html","files/lib/dictionaries/countries.html","","Afghanistan \u00c5land Albania Algeria American Samoa Andorra Angola Anguilla Antarctica Antigua and Barbuda",3],["female_first_names","files/lib/dictionaries/female_first_names.html","files/lib/dictionaries/female_first_names.html","","Mary Patricia Linda Barbara Elizabeth Jennifer Maria Susan Margaret Dorothy Lisa Nancy Karen Betty Helen",3],["frequencies","files/lib/dictionaries/frequencies.html","files/lib/dictionaries/frequencies.html","","Never Once Seldom Often Daily Weekly Monthly Yearly ",3],["genders","files/lib/dictionaries/genders.html","files/lib/dictionaries/genders.html","","Male Female",3],["languages","files/lib/dictionaries/languages.html","files/lib/dictionaries/languages.html","","Afrikaans Albanian Amharic Arabic Armenian Assamese Aymara Azeri Belarusian Bengali Bislama Bosnian Bulgarian",3],["last_names","files/lib/dictionaries/last_names.html","files/lib/dictionaries/last_names.html","","Smith Johnson Williams Jones Brown Davis Miller Wilson Moore Taylor Anderson Thomas Jackson White Harris",3],["lorem_ipsum","files/lib/dictionaries/lorem_ipsum.html","files/lib/dictionaries/lorem_ipsum.html","","Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin risus. Praesent lectus. Vestibulum quam",3],["male_first_names","files/lib/dictionaries/male_first_names.html","files/lib/dictionaries/male_first_names.html","","James John Robert Michael William David Richard Charles Joseph Thomas Christopher Daniel Paul Mark Donald",3],["name_titles","files/lib/dictionaries/name_titles.html","files/lib/dictionaries/name_titles.html","","Mr Ms Mrs Dr Rev Honorable ",3],["provinces","files/lib/dictionaries/provinces.html","files/lib/dictionaries/provinces.html","","Ontario Quebec Nova Scotia New Brunswick Manitoba British Columbia Prince Edward Island Saskatchewan",3],["races","files/lib/dictionaries/races.html","files/lib/dictionaries/races.html","","Alaskan Athabascan Alaska Native Aleut American Indian American Indian and Alaska Native (AIAN) Apache",3],["states","files/lib/dictionaries/states.html","files/lib/dictionaries/states.html","","Alabama Alaska Arizona Arkansas California Colorado Connecticut Delaware Florida Georgia Hawaii Idaho",3],["street_suffixes","files/lib/dictionaries/street_suffixes.html","files/lib/dictionaries/street_suffixes.html","","Alley Avenue Center Circle Court Crossing Drive Hill Junction Lane Park Parkway Pass Place Plaza Point",3],["streets","files/lib/dictionaries/streets.html","files/lib/dictionaries/streets.html","","1st 2nd 3rd 4th 5th 6th 7th 8th Aberg Acker Algoma Almo Alpine American American Ash Amoth Anderson Anhalt",3],["top_level_domains","files/lib/dictionaries/top_level_domains.html","files/lib/dictionaries/top_level_domains.html","","biz com info name net org gov edu mil",3],["array.rb","files/lib/extensions/array_rb.html","files/lib/extensions/array_rb.html","","",3],["hash.rb","files/lib/extensions/hash_rb.html","files/lib/extensions/hash_rb.html","","",3],["range.rb","files/lib/extensions/range_rb.html","files/lib/extensions/range_rb.html","","",3],["string.rb","files/lib/extensions/string_rb.html","files/lib/extensions/string_rb.html","","",3],["file_reader.rb","files/lib/file_reader_rb.html","files/lib/file_reader_rb.html","","",3],["address_forgery.rb","files/lib/forgeries/address_forgery_rb.html","files/lib/forgeries/address_forgery_rb.html","","Generates random address information. ",3],["basic_forgery.rb","files/lib/forgeries/basic_forgery_rb.html","files/lib/forgeries/basic_forgery_rb.html","","",3],["internet_forgery.rb","files/lib/forgeries/internet_forgery_rb.html","files/lib/forgeries/internet_forgery_rb.html","","",3],["lorem_ipsum_forgery.rb","files/lib/forgeries/lorem_ipsum_forgery_rb.html","files/lib/forgeries/lorem_ipsum_forgery_rb.html","","",3],["monetary_forgery.rb","files/lib/forgeries/monetary_forgery_rb.html","files/lib/forgeries/monetary_forgery_rb.html","","",3],["name_forgery.rb","files/lib/forgeries/name_forgery_rb.html","files/lib/forgeries/name_forgery_rb.html","","",3],["personal_forgery.rb","files/lib/forgeries/personal_forgery_rb.html","files/lib/forgeries/personal_forgery_rb.html","","",3],["forgery.rb","files/lib/forgery_rb.html","files/lib/forgery_rb.html","","Require forgeries at the bottom of the file so Forgery works as a gem both within rails and outside of",3],["formats.rb","files/lib/formats_rb.html","files/lib/formats_rb.html","","",3],["phone","files/lib/formats/phone.html","files/lib/formats/phone.html","","-(###)###-#### ",3],["street_number","files/lib/formats/street_number.html","files/lib/formats/street_number.html","","",3],["zip","files/lib/formats/zip.html","files/lib/formats/zip.html","","-####",3]]}}